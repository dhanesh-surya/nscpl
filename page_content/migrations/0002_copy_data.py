# Generated by Django 5.0.7 on 2025-10-26 08:20

from django.db import migrations


def copy_data(apps, schema_editor):
    # Get the old models from core
    old_models = {
        'BlockType': apps.get_model('core', 'BlockType'),
        'StyleOptions': apps.get_model('core', 'StyleOptions'),
        'Page': apps.get_model('core', 'Page'),
        'Block': apps.get_model('core', 'Block'),
        'MenuItem': apps.get_model('core', 'MenuItem'),
        'HeroBannerBlock': apps.get_model('core', 'HeroBannerBlock'),
        'HeroSlideItem': apps.get_model('core', 'HeroSlideItem'),
        'TextImageBlock': apps.get_model('core', 'TextImageBlock'),
        'FeatureHighlightsBlock': apps.get_model('core', 'FeatureHighlightsBlock'),
        'FeatureItem': apps.get_model('core', 'FeatureItem'),
        'TestimonialBlock': apps.get_model('core', 'TestimonialBlock'),
        'TestimonialItem': apps.get_model('core', 'TestimonialItem'),
        'CallToActionBlock': apps.get_model('core', 'CallToActionBlock'),
        'GalleryBlock': apps.get_model('core', 'GalleryBlock'),
        'GalleryImage': apps.get_model('core', 'GalleryImage'),
        'VideoEmbedBlock': apps.get_model('core', 'VideoEmbedBlock'),
        'FAQBlock': apps.get_model('core', 'FAQBlock'),
        'FAQItem': apps.get_model('core', 'FAQItem'),
        'CounterStatsBlock': apps.get_model('core', 'CounterStatsBlock'),
        'CounterItem': apps.get_model('core', 'CounterItem'),
        'ContactFormBlock': apps.get_model('core', 'ContactFormBlock'),
        'TeamMemberBlock': apps.get_model('core', 'TeamMemberBlock'),
        'TeamMemberItem': apps.get_model('core', 'TeamMemberItem'),
        'BlogPreviewBlock': apps.get_model('core', 'BlogPreviewBlock'),
        'TwoColumnTextBlock': apps.get_model('core', 'TwoColumnTextBlock'),
        'TimelineBlock': apps.get_model('core', 'TimelineBlock'),
        'TimelineStep': apps.get_model('core', 'TimelineStep'),
        'FooterInfoBlock': apps.get_model('core', 'FooterInfoBlock'),
    }

    # Get the new models
    new_models = {
        'BlockType': apps.get_model('page_content', 'BlockType'),
        'StyleOptions': apps.get_model('page_content', 'StyleOptions'),
        'Page': apps.get_model('page_content', 'Page'),
        'Block': apps.get_model('page_content', 'Block'),
        'MenuItem': apps.get_model('page_content', 'MenuItem'),
        'HeroBannerBlock': apps.get_model('page_content', 'HeroBannerBlock'),
        'HeroSlideItem': apps.get_model('page_content', 'HeroSlideItem'),
        'TextImageBlock': apps.get_model('page_content', 'TextImageBlock'),
        'FeatureHighlightsBlock': apps.get_model('page_content', 'FeatureHighlightsBlock'),
        'FeatureItem': apps.get_model('page_content', 'FeatureItem'),
        'TestimonialBlock': apps.get_model('page_content', 'TestimonialBlock'),
        'TestimonialItem': apps.get_model('page_content', 'TestimonialItem'),
        'CallToActionBlock': apps.get_model('page_content', 'CallToActionBlock'),
        'GalleryBlock': apps.get_model('page_content', 'GalleryBlock'),
        'GalleryImage': apps.get_model('page_content', 'GalleryImage'),
        'VideoEmbedBlock': apps.get_model('page_content', 'VideoEmbedBlock'),
        'FAQBlock': apps.get_model('page_content', 'FAQBlock'),
        'FAQItem': apps.get_model('page_content', 'FAQItem'),
        'CounterStatsBlock': apps.get_model('page_content', 'CounterStatsBlock'),
        'CounterItem': apps.get_model('page_content', 'CounterItem'),
        'ContactFormBlock': apps.get_model('page_content', 'ContactFormBlock'),
        'TeamMemberBlock': apps.get_model('page_content', 'TeamMemberBlock'),
        'TeamMemberItem': apps.get_model('page_content', 'TeamMemberItem'),
        'BlogPreviewBlock': apps.get_model('page_content', 'BlogPreviewBlock'),
        'TwoColumnTextBlock': apps.get_model('page_content', 'TwoColumnTextBlock'),
        'TimelineBlock': apps.get_model('page_content', 'TimelineBlock'),
        'TimelineStep': apps.get_model('page_content', 'TimelineStep'),
        'FooterInfoBlock': apps.get_model('page_content', 'FooterInfoBlock'),
    }

    # Copy data in dependency order
    copy_order = [
        'BlockType', 'StyleOptions', 'Page', 'MenuItem', 'Block',
        'HeroBannerBlock', 'HeroSlideItem', 'TextImageBlock', 'FeatureHighlightsBlock', 'FeatureItem',
        'TestimonialBlock', 'TestimonialItem', 'CallToActionBlock', 'GalleryBlock', 'GalleryImage',
        'VideoEmbedBlock', 'FAQBlock', 'FAQItem', 'CounterStatsBlock', 'CounterItem',
        'ContactFormBlock', 'TeamMemberBlock', 'TeamMemberItem', 'BlogPreviewBlock',
        'TwoColumnTextBlock', 'TimelineBlock', 'TimelineStep', 'FooterInfoBlock'
    ]

    for model_name in copy_order:
        old_model = old_models[model_name]
        new_model = new_models[model_name]
        for obj in old_model.objects.all():
            fields = [f for f in old_model._meta.fields if f.name != 'id' and not f.one_to_one]
            values = []
            for field in fields:
                value = getattr(obj, field.name)
                if field.many_to_one and value is not None:
                    related_model_name = field.related_model._meta.label.split('.')[1]
                    new_related = new_models[related_model_name].objects.get(id=value.id)
                    values.append(new_related)
                else:
                    values.append(value)
            new_obj = new_model.objects.create(**{f.name: v for f, v in zip(fields, values)})
            # Now set OneToOne fields
            for field in old_model._meta.fields:
                if field.one_to_one:
                    value = getattr(obj, field.name)
                    if value is not None:
                        related_model_name = field.related_model._meta.label.split('.')[1]
                        new_related = new_models[related_model_name].objects.get(id=value.id)
                        setattr(new_obj, field.name, new_related)
                        new_obj.save()


def reverse_copy_data(apps, schema_editor):
    # Delete all data from new models
    new_models = [
        'BlockType', 'StyleOptions', 'Page', 'Block', 'MenuItem', 'HeroBannerBlock', 'HeroSlideItem',
        'TextImageBlock', 'FeatureHighlightsBlock', 'FeatureItem', 'TestimonialBlock', 'TestimonialItem',
        'CallToActionBlock', 'GalleryBlock', 'GalleryImage', 'VideoEmbedBlock', 'FAQBlock', 'FAQItem',
        'CounterStatsBlock', 'CounterItem', 'ContactFormBlock', 'TeamMemberBlock', 'TeamMemberItem',
        'BlogPreviewBlock', 'TwoColumnTextBlock', 'TimelineBlock', 'TimelineStep', 'FooterInfoBlock'
    ]
    for model_name in new_models:
        model = apps.get_model('page_content', model_name)
        model.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('page_content', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(copy_data, reverse_copy_data),
    ]
